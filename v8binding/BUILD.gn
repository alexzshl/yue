# Copyright 2017 Cheng Zhao. All rights reserved.
# Use of this source code is governed by the license that can be found in the
# LICENSE file.

import("//v8binding/node.gni")

config("node_config") {
  defines = [
    "USING_UV_SHARED=1",
    "USING_V8_SHARED=1",
    "BUILDING_NODE_EXTENSION",
  ]

  # v8_enable_pointer_compression is enabled on Electron.
  if (node_runtime == "electron") {
    defines += [ "V8_REVERSE_JSARGS" ]
    if (target_cpu == "arm64" || target_cpu == "x64") {
      defines += [
        "V8_COMPRESS_POINTERS",
        "V8_31BIT_SMIS_ON_64BIT_ARCH",
      ]
    }
  }

  node_dir = "//third_party/" + node_runtime + "-" + node_version

  include_dirs = [
    node_dir + "/include/node",
    node_dir + "/src",
    node_dir + "/deps",
    node_dir + "/deps/uv/include",
    node_dir + "/deps/v8/include",
  ]

  if (is_mac) {
    ldflags = [
      "-undefined", "dynamic_lookup",
    ]
  } else if (is_win) {
    libs = [
      node_dir + "/" + target_cpu + "/node.lib",
    ]
  }
}

source_set("v8binding") {
  sources = [
    "arguments.cc",
    "arguments.h",
    "callback.cc",
    "callback.h",
    "callback_internal.h",
    "dict.cc",
    "dict.h",
    "property.h",
    "locker.cc",
    "locker.h",
    "per_isolate_data.cc",
    "per_isolate_data.h",
    "prototype.cc",
    "prototype.h",
    "prototype_internal.h",
    "ref_method.cc",
    "ref_method.h",
    "template_util.h",
    "types.h",
    "util.h",
    "v8binding.h",
  ]

  deps = [ "//base" ]
  public_configs = [ ":node_config" ]
}

